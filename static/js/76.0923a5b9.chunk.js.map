{"version":3,"file":"static/js/76.0923a5b9.chunk.js","mappings":"yMACA,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,OAAS,sB,kBCQtF,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJR,EAAQQ,EACT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPX,GAAW,EACZ,GACJ,GAAE,CAACC,IACGF,GACL,SAAC,IAAD,CACEa,KAAM,GACN,aAAW,kBACX,cAAY,SACZC,MAAM,UACNC,YAAa,CACXC,OAAQ,YACRC,QAAS,WAGXnB,EAAKoB,OAAS,GAChB,eAAIC,UAAWC,EAAAA,KAAf,SACGtB,EAAKuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,gBAAaN,UAAWC,EAAAA,KAAxB,WACE,gBACEM,IACEH,EAAY,2CAC4BA,GACpCI,EAENC,IAAKJ,EACLL,UAAWC,EAAAA,OAEb,cAAGD,UAAWC,EAAAA,KAAd,SAAyBI,KACzB,cAAGL,UAAWC,EAAAA,UAAd,SAA8BK,MAXvBH,EADD,OAiBZ,cAAGH,UAAWC,EAAAA,OAAd,2CAEH,C,+LCtDKS,EAAM,mCAEL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iGAEoBC,EAAAA,EAAAA,GAAM,6CAA8C,CACzEC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KALD,cAEGI,EAFH,yBAQIA,GARJ,gCAUC,KAAMA,UAGRzB,QAAQC,IAAI,KAAMwB,SAASC,MAC3B1B,QAAQC,IAAI,KAAMwB,SAASE,QAC3B3B,QAAQC,IAAI,KAAMwB,SAASG,UAClB,KAAMC,QAIf7B,QAAQC,IAAI,KAAM4B,SAGlB7B,QAAQC,IAAI,QAAS,KAAM6B,SAE7B9B,QAAQC,IAAI,KAAM8B,QAzBf,gFA6BA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAgCC,EAAOZ,GAAvC,iGAEoBC,EAAAA,EAAAA,GAAM,4CAA6C,CACxEC,OAAQ,CACNC,QAASL,EACTc,MAAAA,EACAZ,KAAAA,KAND,cAEGI,EAFH,yBASIA,GATJ,gCAWC,KAAMA,UAGRzB,QAAQC,IAAI,KAAMwB,SAASC,MAC3B1B,QAAQC,IAAI,KAAMwB,SAASE,QAC3B3B,QAAQC,IAAI,KAAMwB,SAASG,UAClB,KAAMC,QAIf7B,QAAQC,IAAI,KAAM4B,SAGlB7B,QAAQC,IAAI,QAAS,KAAM6B,SAE7B9B,QAAQC,IAAI,KAAM8B,QA1Bf,gFA8BA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,iGAEoBU,EAAAA,EAAAA,GAAM,sCAAD,OAAuCV,GAAM,CACvEW,OAAQ,CACNC,QAASL,KAJV,cAEGM,EAFH,yBAOIA,EAASC,MAPb,gCASC,KAAMD,UAGRzB,QAAQC,IAAI,KAAMwB,SAASC,MAC3B1B,QAAQC,IAAI,KAAMwB,SAASE,QAC3B3B,QAAQC,IAAI,KAAMwB,SAASG,UAClB,KAAMC,QAIf7B,QAAQC,IAAI,KAAM4B,SAGlB7B,QAAQC,IAAI,QAAS,KAAM6B,SAE7B9B,QAAQC,IAAI,KAAM8B,QAxBf,gFA4BA,SAAepC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BiB,GAA9B,iGAEoBU,EAAAA,EAAAA,GAAM,sCAAD,OACYV,EADZ,YAE1B,CACEW,OAAQ,CACNC,QAASL,KANZ,cAEGM,EAFH,yBAUIA,EAASC,KAAKtC,MAVlB,gCAYC,KAAMqC,UAGRzB,QAAQC,IAAI,KAAMwB,SAASC,MAC3B1B,QAAQC,IAAI,KAAMwB,SAASE,QAC3B3B,QAAQC,IAAI,KAAMwB,SAASG,UAClB,KAAMC,QAIf7B,QAAQC,IAAI,KAAM4B,SAGlB7B,QAAQC,IAAI,QAAS,KAAM6B,SAE7B9B,QAAQC,IAAI,KAAM8B,QA3Bf,gFA+BA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,iGAEoBU,EAAAA,EAAAA,GAAM,sCAAD,OACYV,EADZ,YAE1B,CACEW,OAAQ,CACNC,QAASL,KANZ,cAEGM,EAFH,yBAUIA,EAASC,KAAKU,SAVlB,gCAYC,KAAMX,UAGRzB,QAAQC,IAAI,KAAMwB,SAASC,MAC3B1B,QAAQC,IAAI,KAAMwB,SAASE,QAC3B3B,QAAQC,IAAI,KAAMwB,SAASG,UAClB,KAAMC,QAIf7B,QAAQC,IAAI,KAAM4B,SAGlB7B,QAAQC,IAAI,QAAS,KAAM6B,SAE7B9B,QAAQC,IAAI,KAAM8B,QA3Bf,gF","sources":["webpack://movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","servises/MoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"img\":\"Cast_img__-isbW\",\"notifi\":\"Cast_notifi__nNAPr\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport { getMovieCredit } from 'servises/MoviesApi';\nimport css from './Cast.module.css';\nimport notFound from '../../images/not-found.png';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    getMovieCredit(movieId)\n      .then(resp => {\n        setCast(resp);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n  return loading ? (\n    <ClipLoader\n      size={80}\n      aria-label=\"Loading Spinner\"\n      data-testid=\"loader\"\n      color=\"#36d7b7\"\n      cssOverride={{\n        margin: '50px auto',\n        display: 'block',\n      }}\n    />\n  ) : cast.length > 0 ? (\n    <ul className={css.list}>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <li key={id} className={css.item}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200//${profile_path}`\n                : notFound\n            }\n            alt={name}\n            className={css.img}\n          />\n          <p className={css.name}>{name}</p>\n          <p className={css.character}>{character}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className={css.notifi}>Sorry, there aren't any casts </p>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '0edadbafab79c4249d030320f49f37e6';\n\nexport async function getTrendMovies(page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/movie/popular', {\n      params: {\n        api_key: KEY,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMoviesByQuery(query, page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieCredit(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieVideos(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/videos`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n"],"names":["Cast","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","getMovieCredit","then","resp","catch","error","console","log","finally","size","color","cssOverride","margin","display","length","className","css","map","id","profile_path","name","character","src","notFound","alt","KEY","getTrendMovies","page","axios","params","api_key","response","data","status","headers","request","message","config","getMoviesByQuery","query","getMovieDetails","getMovieReviews","results"],"sourceRoot":""}