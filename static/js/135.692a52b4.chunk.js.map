{"version":3,"file":"static/js/135.692a52b4.chunk.js","mappings":"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","sources":["webpack://movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","servises/MoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetails_btn__7L5IF\",\"wrap\":\"MovieDetails_wrap__84S6L\",\"imgWrap\":\"MovieDetails_imgWrap__j5eOW\",\"text\":\"MovieDetails_text__RHcc4\",\"subtitle\":\"MovieDetails_subtitle__NWwoQ\",\"subpageWrap\":\"MovieDetails_subpageWrap__DLB7j\",\"box\":\"MovieDetails_box__0AyGO\",\"list\":\"MovieDetails_list__dbNMP\",\"item\":\"MovieDetails_item__mbUY+\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, Suspense, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport { getMovieDetails } from 'servises/MoviesApi';\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    setLoading(true);\n\n    getMovieDetails(movieId)\n      .then(resp => {\n        setMovieDetails(resp);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n  return loading ? (\n    <ClipLoader\n      size={80}\n      aria-label=\"Loading Spinner\"\n      data-testid=\"loader\"\n      color=\"#36d7b7\"\n      cssOverride={{\n        margin: '50px auto',\n        display: 'block',\n      }}\n    />\n  ) : (\n    movieDetails && (\n      <>\n        <div className={css.wrap}>\n          <button\n            type=\"button\"\n            className={css.btn}\n            onClick={() => navigate(location?.state?.from ?? '/')}\n          >\n            Back\n          </button>\n          <div className={css.imgWrap}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500//${movieDetails.backdrop_path}`}\n              alt={movieDetails.original_title}\n              className={css.img}\n            />\n          </div>\n          <div className={css.detailsWrap}>\n            <h2 className={css.title}>{`${\n              movieDetails.original_title\n            } (${movieDetails.release_date.slice(0, 4)})`}</h2>\n            <p\n              className={css.text}\n            >{`User rate: ${movieDetails.vote_average}`}</p>\n            <h3 className={css.subtitle}>Overview</h3>\n            <p className={css.text}>{movieDetails.overview}</p>\n            <h3 className={css.subtitle}>Genres</h3>\n            <p className={css.text}>\n              {movieDetails.genres.map(({ name }) => name).join(', ')}\n            </p>\n          </div>\n        </div>\n        <div className={css.box}>\n          <div className={css.subpageWrap}>\n            <h3 className={css.subtitle}>Additional information</h3>\n\n            <ul className={css.list}>\n              <li className={css.item}>\n                <Link\n                  to=\"cast\"\n                  className={css.link}\n                  state={{ from: location?.state?.from ?? '/' }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li className={css.item}>\n                <Link\n                  to=\"reviews\"\n                  className={css.link}\n                  state={{ from: location?.state?.from ?? '/' }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"\"></div>\n        </div>\n        <div className={css.childPageWrap}>\n          <Suspense\n            fallback={\n              <ClipLoader\n                size={80}\n                aria-label=\"Loading Spinner\"\n                data-testid=\"loader\"\n                color=\"#36d7b7\"\n                cssOverride={{\n                  margin: '50px auto',\n                  display: 'block',\n                }}\n              />\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </div>\n      </>\n    )\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '0edadbafab79c4249d030320f49f37e6';\n\nexport async function getTrendMovies(page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/movie/popular', {\n      params: {\n        api_key: KEY,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMoviesByQuery(query, page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieCredit(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieVideos(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/videos`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n"],"names":["MovieDetails","useState","movieDetails","setMovieDetails","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getMovieDetails","then","resp","catch","error","console","log","finally","size","color","cssOverride","margin","display","className","css","type","onClick","state","from","src","backdrop_path","alt","original_title","release_date","slice","vote_average","overview","genres","map","name","join","to","Suspense","fallback","KEY","getTrendMovies","page","axios","params","api_key","response","data","status","headers","request","message","config","getMoviesByQuery","query","id","getMovieCredit","cast","getMovieReviews","results"],"sourceRoot":""}