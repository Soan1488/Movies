{"version":3,"file":"static/js/881.268f416d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/ShowMoreBtn/ShowMoreBtn.module.css?9fb0","components/ShowMoreBtn/ShowMoreBtn.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","servises/MoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ShowMoreBtn_btn__L3mNF\"};","import PropTypes from 'prop-types';\n\nimport css from './ShowMoreBtn.module.css';\n\nexport default function ShowMoreBtn({ onClick }) {\n  return (\n    <button type=\"button\" className={css.btn} onClick={onClick}>\n      Show More\n    </button>\n  );\n}\n\n// eslint-disable-next-line react/forbid-foreign-prop-types\nShowMoreBtn.propTypes = {\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"list\":\"Movies_list__hqYjd\",\"item\":\"Movies_item__Ba4aJ\",\"link\":\"Movies_link__MzAfU\",\"text\":\"Movies_text__FlKVm\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport css from './Movies.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getMoviesByQuery } from 'servises/MoviesApi';\nimport ShowMoreBtn from 'components/ShowMoreBtn/ShowMoreBtn';\n\nexport default function Movies() {\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [ShowBtn, setShowBtn] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    setLoading(true);\n\n    getMoviesByQuery(searchParams.get('query'), page)\n      .then(({ data: { total_pages, results } }) => {\n        if (results.length <= 0) {\n          toast.error(\n            `Sorry, we can't find anything on your request ${searchParams.get(\n              'query'\n            )} `\n          );\n          return;\n        }\n        setMoviesByQuery(prevMovies => [...prevMovies, ...results]);\n        page >= total_pages ? setShowBtn(false) : setShowBtn(true);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [page, searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (e.target.elements.search.value.trim() === '') {\n      toast.error(`Please, write a valid request`);\n      return;\n    } else if (\n      e.target.elements.search.value.trim() === searchParams.get('query')\n    ) {\n      toast.error(`You already have a result for this query`);\n      return;\n    }\n    setSearchParams({ query: e.target.elements.search.value.trim(' ') });\n    setMoviesByQuery([]);\n    e.target.elements.search.value = '';\n  };\n\n  const buttonHendler = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.label}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            className={css.input}\n            placeholder=\"Enter your search\"\n          />\n        </label>\n        <button type=\"submit\" className={css.btn}></button>\n      </form>\n      {moviesByQuery.length > 0 && (\n        <>\n          <ul className={css.list}>\n            {moviesByQuery.map(({ id, original_title, poster_path }) => {\n              return (\n                <li key={id} className={css.item}>\n                  <Link\n                    className={css.link}\n                    to={`${id}`}\n                    state={{ from: location }}\n                  >\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500//${poster_path}`}\n                      alt={original_title}\n                      width=\"250\"\n                    />\n                    <p className={css.text}>{original_title}</p>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n          {ShowBtn && <ShowMoreBtn onClick={buttonHendler} />}\n        </>\n      )}\n      {loading && (\n        <ClipLoader\n          size={80}\n          aria-label=\"Loading Spinner\"\n          data-testid=\"loader\"\n          color=\"#36d7b7\"\n          cssOverride={{\n            margin: '50px auto',\n            display: 'block',\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '0edadbafab79c4249d030320f49f37e6';\n\nexport async function getTrendMovies(page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/movie/popular', {\n      params: {\n        api_key: KEY,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMoviesByQuery(query, page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieCredit(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieVideos(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/videos`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n"],"names":["ShowMoreBtn","onClick","type","className","css","Movies","useState","moviesByQuery","setMoviesByQuery","loading","setLoading","page","setPage","ShowBtn","setShowBtn","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","getMoviesByQuery","then","data","total_pages","results","length","toast","prevMovies","catch","error","console","log","finally","onSubmit","e","preventDefault","target","elements","search","value","trim","query","name","placeholder","map","id","original_title","poster_path","to","state","from","src","alt","width","prevPage","size","color","cssOverride","margin","display","KEY","getTrendMovies","axios","params","api_key","response","status","headers","request","message","config","getMovieDetails","getMovieCredit","cast","getMovieReviews"],"sourceRoot":""}