{"version":3,"file":"static/js/674.8f8b7cc7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/ShowMoreBtn/ShowMoreBtn.module.css?9fb0","components/ShowMoreBtn/ShowMoreBtn.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","servises/MoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ShowMoreBtn_btn__L3mNF\"};","import PropTypes from 'prop-types';\n\nimport css from './ShowMoreBtn.module.css';\n\nexport default function ShowMoreBtn({ onClick }) {\n  return (\n    <button type=\"button\" className={css.btn} onClick={onClick}>\n      Show More\n    </button>\n  );\n}\n\n// eslint-disable-next-line react/forbid-foreign-prop-types\nShowMoreBtn.propTypes = {\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\",\"list\":\"HomePage_list__99c8-\",\"item\":\"HomePage_item__PHN05\",\"link\":\"HomePage_link__-d+Of\",\"text\":\"HomePage_text__2XixT\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport { getTrendMovies } from 'servises/MoviesApi';\nimport ShowMoreBtn from 'components/ShowMoreBtn/ShowMoreBtn';\nimport css from './HomePage.module.css';\n\nexport default function HomePage() {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [ShowBtn, setShowBtn] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendMovies(page)\n      .then(({ data, total_pages }) => {\n        setTrendMovies(prevMovies => [...prevMovies, ...data.results]);\n        page >= total_pages ? setShowBtn(false) : setShowBtn(true);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [page]);\n\n  const buttonHendler = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <h1 className={css.title}>Trending Today</h1>\n      {trendMovies.length > 0 && (\n        <>\n          <ul className={css.list}>\n            {trendMovies.map(({ id, original_title, poster_path }) => {\n              return (\n                <li key={id} className={css.item}>\n                  <Link\n                    className={css.link}\n                    to={`movies/${id}`}\n                    state={{ from: location }}\n                  >\n                    <img\n                      src={`https://image.tmdb.org/t/p/w500//${poster_path}`}\n                      alt={original_title}\n                      width=\"250\"\n                    />\n                    <p className={css.text}>{original_title}</p>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n          {ShowBtn && <ShowMoreBtn onClick={buttonHendler} />}\n        </>\n      )}\n      {loading && (\n        <ClipLoader\n          size={80}\n          aria-label=\"Loading Spinner\"\n          data-testid=\"loader\"\n          color=\"#36d7b7\"\n          cssOverride={{\n            margin: '50px auto',\n            display: 'block',\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '0edadbafab79c4249d030320f49f37e6';\n\nexport async function getTrendMovies(page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/movie/popular', {\n      params: {\n        api_key: KEY,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMoviesByQuery(query, page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieCredit(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieVideos(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/videos`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n"],"names":["ShowMoreBtn","onClick","type","className","css","HomePage","useState","trendMovies","setTrendMovies","loading","setLoading","page","setPage","ShowBtn","setShowBtn","location","useLocation","useEffect","getTrendMovies","then","data","total_pages","prevMovies","results","catch","error","console","log","finally","length","map","id","original_title","poster_path","to","state","from","src","alt","width","prevPage","size","color","cssOverride","margin","display","KEY","axios","params","api_key","response","status","headers","request","message","config","getMoviesByQuery","query","getMovieDetails","getMovieCredit","cast","getMovieReviews"],"sourceRoot":""}