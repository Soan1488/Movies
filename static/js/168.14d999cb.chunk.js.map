{"version":3,"file":"static/js/168.14d999cb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","servises/MoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\",\"notifi\":\"Reviews_notifi__2i5uP\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport { getMovieReviews } from '../../servises/MoviesApi';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieReviews(movieId)\n      .then(resp => {\n        setReviews(resp);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return loading ? (\n    <ClipLoader\n      size={80}\n      aria-label=\"Loading Spinner\"\n      data-testid=\"loader\"\n      color=\"#36d7b7\"\n      cssOverride={{\n        margin: '50px auto',\n        display: 'block',\n      }}\n    />\n  ) : reviews.length > 0 ? (\n    <ul className={css.list}>\n      {reviews.map(({ id, content, author }) => (\n        <li key={id} className={css.item}>\n          <p className={css.author}>{`Author: ${author}`}</p>\n          <p className={css.content}>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className={css.notifi}>Sorry, there aren't any reviews</p>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '0edadbafab79c4249d030320f49f37e6';\n\nexport async function getTrendMovies(page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/movie/popular', {\n      params: {\n        api_key: KEY,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMoviesByQuery(query, page) {\n  try {\n    const response = await axios('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        page,\n      },\n    });\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios(`https://api.themoviedb.org/3/movie/${id}`, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieCredit(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.cast;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n\nexport async function getMovieVideos(id) {\n  try {\n    const response = await axios(\n      `https://api.themoviedb.org/3/movie/${id}/videos`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    if (error.response) {\n      // Запрос был сделан, и сервер ответил кодом состояния, который\n      // выходит за пределы 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // Запрос был сделан, но ответ не получен\n      // `error.request`- это экземпляр XMLHttpRequest в браузере и экземпляр\n      // http.ClientRequest в node.js\n      console.log(error.request);\n    } else {\n      // Произошло что-то при настройке запроса, вызвавшее ошибку\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n}\n"],"names":["Reviews","useState","reviews","setReviews","loading","setLoading","movieId","useParams","useEffect","getMovieReviews","then","resp","catch","error","console","log","finally","size","color","cssOverride","margin","display","length","className","css","map","id","content","author","KEY","getTrendMovies","page","axios","params","api_key","response","data","status","headers","request","message","config","getMoviesByQuery","query","getMovieDetails","getMovieCredit","cast","results"],"sourceRoot":""}